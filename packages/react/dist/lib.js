"use strict";import{jsx as h}from"react/jsx-runtime";import{getGetter as S}from"@optq/core";import{QueryClientProvider as q,useQuery as w}from"@tanstack/react-query";import y from"object-hash";import{createContext as b,useCallback as O,useContext as x,useEffect as C,useMemo as g,useState as k}from"react";import{subscribe as v,useSnapshot as A}from"valtio";const p=b(void 0);export function OptqProvider({children:e,value:s}){return h(p.Provider,{value:s,children:h(q,{client:s.queryClient,children:e})})}export function useOptq(){const e=x(p);if(!e)throw new Error("Missing OptqProvider");const s=O(({resourceId:u,params:i,headers:c,...d})=>{const a=`GET ${u}`,r=(e.config?.routes?.[a]?.hash??y)(i??{}),t=A(e.predictionStore),{data:l,...m}=w({queryKey:[u,r],queryFn:()=>e.fetch(u,i,c),...d}),f=g(()=>S({config:e.config,predictionStore:t}),[e,t]);return{data:g(()=>f(u,i),[f,t,u,i]),last:l,...m}},[e]);return{...e,useQuery:s}}export function useOptqRequestStats(e,s={debounce:1e3}){const[u,i]=k({completed:0,offline:0,pending:0,total:0,ratio:0});return C(()=>{let c;return v(e.requestStore,d=>{e.requestStore.length===0?c=setTimeout(()=>{i({completed:0,offline:0,pending:0,total:0,ratio:1})},s.debounce):clearTimeout(c);const a=d.find(n=>n[0]==="set"&&n[1].length===1&&n[1][0]!=="length"&&n[3]===void 0);i(a?n=>{const o=Math.max(n.total+1,e.requestStore.length),r=e.requestStore.filter(l=>!l.waitingNetwork&&l.respondedAt===void 0).length,t=e.requestStore.filter(l=>l.waitingNetwork&&l.respondedAt===void 0).length;return{completed:o-r-t,offline:t,pending:r,total:o,ratio:(o-r-t)/o}}:n=>{const o=e.requestStore.filter(t=>!t.waitingNetwork&&t.respondedAt===void 0).length,r=e.requestStore.filter(t=>t.waitingNetwork&&t.respondedAt===void 0).length;return{completed:n.total-o-r,offline:r,pending:o,total:n.total,ratio:(n.total-o-r)/Math.max(1,n.total)}})})},[e.requestStore,s.debounce]),u}
