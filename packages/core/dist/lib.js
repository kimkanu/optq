"use strict";import{QueryClient as T,onlineManager as k,focusManager as j}from"@tanstack/query-core";import{nanoid as b}from"nanoid/non-secure";import x from"object-hash";import{proxy as R}from"valtio/vanilla";export function createOptq(e){const t=e.queryClient??new T,s=R([]),u=R({}),f=R({}),o=getSetter({config:e,requestStore:s,cacheStore:u,predictionStore:f}),d=getGetter({config:e,predictionStore:f}),n=getFetcher({config:e,set:o}),h=getMutator({config:e,requestStore:s,cacheStore:u,predictionStore:f,set:o}),i=new Promise(l=>{k.subscribe(c=>{c&&l()})}).then(async()=>{if(e?.resumeRequestMode==="sequential"){const l=[];for(const c of s)if(c.waitingNetwork){c.waitingNetwork=!1;try{const g=await h(c);l.push({status:"fulfilled",value:{request:c,response:g}})}catch(g){l.push({status:"rejected",value:{request:c},reason:g})}}return l}return await Promise.all(s.filter(l=>l.waitingNetwork).map(async(l,c)=>{l.waitingNetwork=!1;try{const g=c*10;await new Promise(a=>setTimeout(a,g));const r=await h(l);return{status:"fulfilled",value:{request:l,response:r}}}catch(g){return{status:"rejected",value:{request:l},reason:g}}}))});return typeof window<"u"&&window.addEventListener&&j.setEventListener(l=>{const c=()=>l();return window.addEventListener("visibilitychange",c,!1),window.addEventListener("focus",c,!1),()=>{window.removeEventListener("visibilitychange",c),window.removeEventListener("focus",c)}}),{config:e,queryClient:t,requestStore:s,cacheStore:u,predictionStore:f,set:o,get:d,fetch:n,mutate:h,pendingResponses:i}}export function getSetter(e){return(t,s,u,f)=>{var o;const d=`GET ${t}`,w=(e.config?.routes?.[d]?.hash??x)(s??{}),i=e.cacheStore[t]?.[w]?.respondedAt;(i===void 0||i<=f)&&((o=e.cacheStore)[t]??(o[t]={}),e.cacheStore[t][w]={value:u,respondedAt:f}),y(e,t,w)}}export function getGetter(e){return(t,...s)=>{const[u]=s,f=`GET ${t}`,o=e.config.routes?.[f];if(!o)return;const n=(o?.hash??x)(u??{}),h=e.predictionStore[t]?.[n];return h!==void 0?h:typeof o.defaultValue=="function"?o.defaultValue(u):o.defaultValue}}export function getFetcher(e){return async(t,...s)=>{const[u,f]=s,o=`GET ${t}`,d=e.config.routes?.[o],n=await F({baseUrl:e.config?.baseUrl??"",method:"GET",path:t,params:u,headers:f});if(n.ok){const h=d?.respondedAt?.(n)??e.config?.respondedAt?.(n)??O(n);d?.onResponse?.({respondedAt:h,params:u,status:n.status,ok:n.ok,headers:n.headers,data:n.data,request:{headers:f}});const w={...n,params:u,request:{headers:f},respondedAt:h},i=d?.transform?.(w)??n.data;e.set(t,u,i,h)}return n}}export function getMutator(e){return async function({id:t=b(),apiId:s,params:u,headers:f,body:o}){let d,n=100;arguments.length>1&&(console.warn("Do not use additional arguments of `mutate` in production."),d=arguments[1],n=arguments[2]??100);const h=e.config?.routes?.[s],w={id:t,apiId:s,params:u,headers:f,body:o},i=[],v=(r,a)=>{const S=`GET ${r}`,E=(e.config?.routes?.[S]?.hash??x)(a??{});for(const[P,A]of i)if(r===P&&E===A)return;i.push([r,E])},l=r=>{for(let a=e.requestStore.length-1;a>=0;a--)e.requestStore[a].waitingNetwork&&r(e.requestStore[a])&&e.requestStore.splice(a,1)};if(!e.requestStore.some(r=>r.id===t)){e.requestStore.push({...w,waitingNetwork:!k.isOnline(),affectedPredictions:i}),h?.actions?.({...w,set:v,removeOfflineRequests:l});for(const[r,a]of i)y(e,r,a)}const c=s.slice(0,s.indexOf(" "));return(d?new Promise(r=>setTimeout(()=>r(),n)).then(d):new Promise(r=>{if(k.isOnline())return r();const a=k.subscribe(S=>{if(S){a(),r();const m=e.requestStore.findIndex(p=>p.id===t);m>=0&&(e.requestStore[m].waitingNetwork=!1)}})}).then(()=>F({baseUrl:e.config?.baseUrl??"",method:c,path:s.slice(c.length+1),params:u,headers:f,body:o}))).then(r=>{const a=h?.respondedAt?.(r)??e.config?.respondedAt?.(r)??O(r),S=e.requestStore.findIndex(m=>m.id===t);return S>=0&&(e.requestStore[S].respondedAt=a),h?.onResponse?.({respondedAt:a,params:u,status:r.status,ok:r.ok,headers:r.headers,data:r.data,set:(m,p,E)=>e.set(m,p,E,a),request:w,removeRequest(){const m=e.requestStore.findIndex(p=>p.id===t);if(m>=0){const[p]=e.requestStore.splice(m,1);for(const[E,P]of p.affectedPredictions??[])y(e,E,P)}},invalidatePrediction:(m,p)=>{const A=(e.config?.routes?.[`GET ${m}`]?.hash??x)(p??{});y(e,m,A)}}),{...r,respondedAt:a}}).catch(r=>{const a=e.requestStore.findIndex(S=>S.id===t);if(a>=0){const[S]=e.requestStore.splice(a,1);for(const[m,p]of S.affectedPredictions??[])y(e,m,p)}throw r})}}function y(e,t,s){var u;const f=`GET ${t}`,d=e.config.routes?.[f]?.hash??x;(u=e.predictionStore)[t]??(u[t]={}),e.predictionStore[t][s]=e.cacheStore[t]?.[s]?.value;for(const n of e.requestStore){n.affectedPredictions=n.affectedPredictions?.filter(([w,i])=>w!==t||i!==s)??[];const h=(w,i,v)=>{function l(g){return g===t&&s===d(i)}if(!l(w)||n.respondedAt!==void 0&&e.cacheStore?.[t]?.[s].respondedAt!==void 0&&n.respondedAt<=e.cacheStore[t][s].respondedAt)return;const c=typeof v!="function"?v:v(e.predictionStore[t][s]);e.predictionStore[t][s]=c,n.affectedPredictions.every(([g,r])=>g!==t||r!==s)&&n.affectedPredictions.push([t,s])};e.config.routes?.[n.apiId]?.actions?.({...n,set:h,removeRequests:()=>{}})}for(let n=e.requestStore.length-1;n>=0;n--)e.requestStore[n].affectedPredictions.length||e.requestStore.splice(n,1)}async function F({baseUrl:e,method:t,path:s,params:u,headers:f,body:o}){let d=/^https?:\/\//.test(s)?s:e+s;{const g=new URLSearchParams;for(const[a,S]of Object.entries(u??{})){if(S==null)continue;const m=new RegExp(`:${a}(?=/|$)`,"g");m.test(d)?d=d.replace(m,S.toString()):g.append(a,S.toString())}const r=g.toString();d+=`${r?"?":""}${r}`}const n=o===void 0?!0:typeof o=="object"&&(o===null||o.constructor===Object),h=o===void 0?!1:typeof o=="string",w=o===void 0?!1:o instanceof FormData,i=await fetch(d,{method:t,headers:{"content-type":n?"application/json":h?"text/plain":w?"multipart/form-data":"application/octet-stream",...f},body:o===void 0?void 0:n?JSON.stringify(o):o}),v=i.headers.get("content-type"),l=Object.fromEntries(i.headers.entries());let c;try{c=v?.includes("json")?await i.json():v?.startsWith("text/")?await i.text():await i.arrayBuffer()}catch{c=void 0}return{status:i.status,ok:i.ok,headers:l,data:c,raw:i}}function O(e){return BigInt(new Date(e.headers.date??Date.now()).getTime())}
